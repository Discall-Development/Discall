{
  "version": 3,
  "sources": ["../../src/ws.ts"],
  "sourcesContent": ["import WebSocket from 'ws'\nimport { pack, unpack } from 'etf.js';\n\nimport { DiscordData, OpCode } from './type';\nimport { VersionError, EncodingError } from './errors';\nimport Intents from './Intents';\n\nconst zlib_suffix: Buffer = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nexport default class DiscallWS {\n\tpublic ws: WebSocket\n\tpublic encoding: 'json' | 'etf'\n\tpublic processer: DiscordDataProcesser\n\t\n\tprivate version: number\n\tprivate wsUri: URL = new URL('wss://gateway.discord.gg')\n\n\tconstructor(\n\t\ttoken: string,\n\t\tintents: Intents = Intents.none(),\n\t\tencoding: string = 'etf',\n\t\tversion: number = 9\n\t) {\n\t\tif (version < 8 || version > 9)\n\t\t\tthrow new VersionError(version);\n\t\tthis.version = version;\n\n\t\tif (encoding !== 'json' && encoding !== 'etf')\n\t\t\tthrow new EncodingError(encoding);\n\t\tthis.encoding = encoding;\n\t\t\n\t\tthis.wsUri.searchParams.append('v', `${this.version}`);\n\t\tthis.wsUri.searchParams.append('encoding', this.encoding);\n\n\t\tthis.ws = new WebSocket(this.wsUri.toString());\n\t\t\n\t\tthis.ws.onopen = (e: WebSocket.Event): void => this.on_open(e);\n\t\tthis.ws.onclose = (e: WebSocket.CloseEvent): void => this.on_close(e);\n\t\tthis.ws.onerror = (e: WebSocket.ErrorEvent): void => this.on_error(e);\n\t\tthis.ws.onmessage = (e: WebSocket.MessageEvent): void => this.on_message(e);\n\n\t\tthis.processer = new DiscordDataProcesser(token, intents);\n\t}\n\n\tpublic send(data: DiscordData): void {\n\t\tlet raw_data: string | Buffer;\n\t\tif (this.encoding == 'json')\n\t\t\traw_data = JSON.stringify(data);\n\t\telse\n\t\t\traw_data = this.encode(data);\n\n\t\tthis.ws.send(raw_data, (err?: Error) => {\n\t\t\tif (err)\n\t\t\t\tconsole.error(err);\n\t\t});\n\t}\n\n\tprivate on_open(event: WebSocket.Event): void {}\n\t\n\tprivate on_close(event: WebSocket.CloseEvent): void {\n\t\tconsole.log('ws closed.\\n');\n\t}\n\t\n\tprivate on_error(event: WebSocket.ErrorEvent): void {\n\t\tconsole.log('ws errored.\\n');\n\t}\n\t\n\tprivate on_message(event: WebSocket.MessageEvent): void {\n\t\tlet data: DiscordData | WebSocket.Data = event.data;\n\n\t\tif (this.encoding == 'etf') {\n\t\t\tdata = this.decode(data as Buffer);\n\t\t} else if (this.encoding == 'json') {\n\t\t\tdata = JSON.parse(data as string);\n\t\t}\n\n\t\tconsole.log(data)\n\t\tthis.processData(data as DiscordData);\n\t}\n\n\tprivate processData(data: DiscordData): void {\n\t\tswitch(data.op) {\n\t\t\tcase OpCode.Dispatch:\n\t\t\t\tthis.processer.Dispatch(data, this);\n\t\t\t\tbreak;\n\t\t\tcase OpCode.Heartbeat:\n\t\t\t\tthis.processer.Heartbeat(data, this);\n\t\t\t\tbreak;\n\t\t\tcase OpCode.Reconnect:\n\t\t\t\tthis.processer.Reconnect(data, this);\n\t\t\t\tbreak;\n\t\t\tcase OpCode.InvalidSession:\n\t\t\t\tthis.processer.InvalidSession(data, this);\n\t\t\t\tbreak;\n\t\t\tcase OpCode.Hello:\n\t\t\t\tthis.processer.Hello(data, this);\n\t\t\t\tbreak;\n\t\t\tcase OpCode.HeartbeatACK:\n\t\t\t\tthis.processer.HeartbeatACK(data, this);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tprivate decode(buf: Buffer): DiscordData {\n\t\treturn unpack(buf) as DiscordData;\n\t}\n\t\n\tprivate encode(buf: DiscordData): Buffer {\n\t\treturn pack(buf) as Buffer;\n\t}\n}\n\nclass DiscordDataProcesser {\n\tprivate token: string\n\tprivate intents: number\n\tprivate sequence: number | null = null\n\tprivate heartbeat: number = 0\n\n\tprivate heartbeat_code?: NodeJS.Timer\n\n\tconstructor(token: string, intents: Intents) {\n\t\tthis.token = token;\n\t\tthis.intents = intents.value;\n\t}\n\t\n\tDispatch(data: DiscordData, ws: DiscallWS): void {}\n\t\n\tHeartbeat(data: DiscordData, ws: DiscallWS): void {}\n\t\n\tIdentify(ws: DiscallWS): void {\n\t\tws.send({\n\t\t\top: 2,\n\t\t\td: {\n\t\t\t\ttoken: this.token,\n\t\t\t\tintents: this.intents,\n\t\t\t\tproperties: {\n\t\t\t\t\t$os: 'linux',\n\t\t\t\t\t$browser: 'discall',\n\t\t\t\t\t$device: 'discall'\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\t\n\tVoiceStateUpdate(ws: DiscallWS): void {}\n\t\n\tResume(ws: DiscallWS): void {}\n\t\n\tReconnect(data: DiscordData, ws: DiscallWS): void {}\n\t\n\tRequestGuildMembers(ws: DiscallWS): void {}\n\t\n\tInvalidSession(data: DiscordData, ws: DiscallWS): void {}\n\t\n\tHello(data: DiscordData, ws: DiscallWS): void {\n\t\tif (this.heartbeat)\n\t\t\treturn;\n\n\t\tthis.Identify(ws);\n\t\tthis.heartbeat = data.d?.heartbeat_interval;\n\t\tthis.heartbeat_code = setInterval(() => {\n\t\t\tws.send({\n\t\t\t\top: 1,\n\t\t\t\td: this.sequence\n\t\t\t});\n\t\t}, this.heartbeat);\n\t}\n\t\n\tHeartbeatACK(data: DiscordData, wss: DiscallWS): void {}\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,gBAAsB;AACtB,iBAA6B;AAE7B,kBAAoC;AACpC,oBAA4C;AAC5C,qBAAoB;AAEpB,MAAM,cAAsB,OAAO,KAAK,CAAC,GAAM,GAAM,KAAM;AAC3D,gBAA+B;AAAA,EACvB;AAAA,EACA;AAAA,EACA;AAAA,EAEC;AAAA,EACA,QAAa,IAAI,IAAI;AAAA,EAE7B,YACC,OACA,UAAmB,uBAAQ,QAC3B,WAAmB,OACnB,UAAkB,GACjB;AACD,QAAI,UAAU,KAAK,UAAU;AAC5B,YAAM,IAAI,2BAAa;AACxB,SAAK,UAAU;AAEf,QAAI,aAAa,UAAU,aAAa;AACvC,YAAM,IAAI,4BAAc;AACzB,SAAK,WAAW;AAEhB,SAAK,MAAM,aAAa,OAAO,KAAK,GAAG,KAAK;AAC5C,SAAK,MAAM,aAAa,OAAO,YAAY,KAAK;AAEhD,SAAK,KAAK,IAAI,kBAAU,KAAK,MAAM;AAEnC,SAAK,GAAG,SAAS,CAAC,MAA6B,KAAK,QAAQ;AAC5D,SAAK,GAAG,UAAU,CAAC,MAAkC,KAAK,SAAS;AACnE,SAAK,GAAG,UAAU,CAAC,MAAkC,KAAK,SAAS;AACnE,SAAK,GAAG,YAAY,CAAC,MAAoC,KAAK,WAAW;AAEzE,SAAK,YAAY,IAAI,qBAAqB,OAAO;AAAA;AAAA,EAG3C,KAAK,MAAyB;AACpC,QAAI;AACJ,QAAI,KAAK,YAAY;AACpB,iBAAW,KAAK,UAAU;AAAA;AAE1B,iBAAW,KAAK,OAAO;AAExB,SAAK,GAAG,KAAK,UAAU,CAAC,QAAgB;AACvC,UAAI;AACH,gBAAQ,MAAM;AAAA;AAAA;AAAA,EAIT,QAAQ,OAA8B;AAAA;AAAA,EAEtC,SAAS,OAAmC;AACnD,YAAQ,IAAI;AAAA;AAAA,EAGL,SAAS,OAAmC;AACnD,YAAQ,IAAI;AAAA;AAAA,EAGL,WAAW,OAAqC;AACvD,QAAI,OAAqC,MAAM;AAE/C,QAAI,KAAK,YAAY,OAAO;AAC3B,aAAO,KAAK,OAAO;AAAA,eACT,KAAK,YAAY,QAAQ;AACnC,aAAO,KAAK,MAAM;AAAA;AAGnB,YAAQ,IAAI;AACZ,SAAK,YAAY;AAAA;AAAA,EAGV,YAAY,MAAyB;AAC5C,YAAO,KAAK;AAAA,WACN,mBAAO;AACX,aAAK,UAAU,SAAS,MAAM;AAC9B;AAAA,WACI,mBAAO;AACX,aAAK,UAAU,UAAU,MAAM;AAC/B;AAAA,WACI,mBAAO;AACX,aAAK,UAAU,UAAU,MAAM;AAC/B;AAAA,WACI,mBAAO;AACX,aAAK,UAAU,eAAe,MAAM;AACpC;AAAA,WACI,mBAAO;AACX,aAAK,UAAU,MAAM,MAAM;AAC3B;AAAA,WACI,mBAAO;AACX,aAAK,UAAU,aAAa,MAAM;AAClC;AAAA;AAAA;AAAA,EAIK,OAAO,KAA0B;AACxC,WAAO,uBAAO;AAAA;AAAA,EAGP,OAAO,KAA0B;AACxC,WAAO,qBAAK;AAAA;AAAA;AAId,2BAA2B;AAAA,EAClB;AAAA,EACA;AAAA,EACA,WAA0B;AAAA,EAC1B,YAAoB;AAAA,EAEpB;AAAA,EAER,YAAY,OAAe,SAAkB;AAC5C,SAAK,QAAQ;AACb,SAAK,UAAU,QAAQ;AAAA;AAAA,EAGxB,SAAS,MAAmB,IAAqB;AAAA;AAAA,EAEjD,UAAU,MAAmB,IAAqB;AAAA;AAAA,EAElD,SAAS,IAAqB;AAC7B,OAAG,KAAK;AAAA,MACP,IAAI;AAAA,MACJ,GAAG;AAAA,QACF,OAAO,KAAK;AAAA,QACZ,SAAS,KAAK;AAAA,QACd,YAAY;AAAA,UACX,KAAK;AAAA,UACL,UAAU;AAAA,UACV,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,EAMb,iBAAiB,IAAqB;AAAA;AAAA,EAEtC,OAAO,IAAqB;AAAA;AAAA,EAE5B,UAAU,MAAmB,IAAqB;AAAA;AAAA,EAElD,oBAAoB,IAAqB;AAAA;AAAA,EAEzC,eAAe,MAAmB,IAAqB;AAAA;AAAA,EAEvD,MAAM,MAAmB,IAAqB;AAzJ/C;AA0JE,QAAI,KAAK;AACR;AAED,SAAK,SAAS;AACd,SAAK,YAAY,WAAK,MAAL,mBAAQ;AACzB,SAAK,iBAAiB,YAAY,MAAM;AACvC,SAAG,KAAK;AAAA,QACP,IAAI;AAAA,QACJ,GAAG,KAAK;AAAA;AAAA,OAEP,KAAK;AAAA;AAAA,EAGT,aAAa,MAAmB,KAAsB;AAAA;AAAA;",
  "names": []
}
