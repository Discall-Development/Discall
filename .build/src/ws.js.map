{
  "version": 3,
  "sources": ["../../src/ws.ts"],
  "sourcesContent": ["import WebSocket from \"ws\";\r\nimport {pack, unpack} from \"etf.js\";\r\nimport {debug, error} from \"./logger\";\r\nimport {DiscordData, Opcode, WSObject} from \"./dataType\";\r\n\r\ntype Encoding = 'etf' | 'json';\r\n\r\nlet Global: {\r\n    sequence: number | null;\r\n    session_id: string | null;\r\n    events: { [k: string]: ((...item: any) => Promise<any>)[] };\r\n} = {\r\n    sequence: null,\r\n    session_id: null,\r\n    events: {}\r\n}\r\nexport function createWS(\r\n    token: string,\r\n    intents: number,\r\n    version: 8 | 9 = 9,\r\n    encoding: Encoding = 'etf'\r\n): WSObject {\r\n    let wsUri = `wss://gateway.discord.gg?v=${version}&encoding=${encoding}`;\r\n\r\n    let ws = new WebSocket(wsUri);\r\n    ws.onopen = (data) => onOpen(ws, data, token, intents, encoding);\r\n    ws.onclose = onClose;\r\n    ws.onerror = onError;\r\n    ws.onmessage = (data) => onMessage(ws, data, encoding);\r\n\r\n    return {\r\n        ws,\r\n        ready: packEvent('ready'),\r\n        resumed: packEvent('resumed'),\r\n        application_command_permissions_update: packEvent('application_command_permissions_update'),\r\n        channel_create: packEvent('channel_create'),\r\n        channel_update: packEvent('channel_update'),\r\n        channel_delete: packEvent('channel_delete'),\r\n        channel_pins_update: packEvent('channel_pins_update'),\r\n        thread_create: packEvent('thread_create'),\r\n        thread_update: packEvent('thread_update'),\r\n        thread_delete: packEvent('thread_delete'),\r\n        thread_list_sync: packEvent('thread_list_sync'),\r\n        thread_member_update: packEvent('thread_member_update'),\r\n        thread_members_update: packEvent('thread_members_update'),\r\n        guild_create: packEvent('guild_create'),\r\n        guild_update: packEvent('guild_update'),\r\n        guild_delete: packEvent('guild_delete'),\r\n        guild_ban_add: packEvent('guild_ban_add'),\r\n        guild_ban_remove: packEvent('guild_ban_remove'),\r\n        guild_emojis_update: packEvent('guild_emojis_update'),\r\n        guild_stickers_update: packEvent('guild_stickers_update'),\r\n        guild_integrations_update: packEvent('guild_integrations_update'),\r\n        guild_member_add: packEvent('guild_member_add'),\r\n        guild_member_remove: packEvent('guild_member_remove'),\r\n        guild_member_update: packEvent('guild_member_update'),\r\n        guild_member_chunk: packEvent('guild_member_chunk'),\r\n        guild_role_create: packEvent('guild_role_create'),\r\n        guild_role_update: packEvent('guild_role_update'),\r\n        guild_role_delete: packEvent('guild_role_delete'),\r\n        guild_scheduled_event_create: packEvent('guild_scheduled_event_create'),\r\n        guild_scheduled_event_update: packEvent('guild_scheduled_event_update'),\r\n        guild_scheduled_event_delete: packEvent('guild_scheduled_event_delete'),\r\n        guild_scheduled_event_user_add: packEvent('guild_scheduled_event_user_add'),\r\n        guild_scheduled_event_user_remove: packEvent('guild_scheduled_event_user_remove'),\r\n        integration_create: packEvent('integration_create'),\r\n        integration_update: packEvent('integration_update'),\r\n        integration_delete: packEvent('integration_delete'),\r\n        interaction_create: packEvent('interaction_create'),\r\n        invite_create: packEvent('invite_create'),\r\n        invite_delete: packEvent('invite_delete'),\r\n        message_create: packEvent('message_create'),\r\n        message_update: packEvent('message_update'),\r\n        message_delete: packEvent('message_delete'),\r\n        message_delete_bulk: packEvent('message_delete_bulk'),\r\n        message_reaction_add: packEvent('message_reaction_add'),\r\n        message_reaction_remove: packEvent('message_reaction_remove'),\r\n        message_reaction_remove_all: packEvent('message_reaction_remove_all'),\r\n        message_reaction_remove_emoji: packEvent('message_reaction_remove_emoji'),\r\n        presence_update: packEvent('presence_update'),\r\n        stage_instance_create: packEvent('stage_instance_create'),\r\n        stage_instance_delete: packEvent('stage_instance_delete'),\r\n        stage_instance_update: packEvent('state_instance_update'),\r\n        typing_start: packEvent('typing_start'),\r\n        user_update: packEvent('user_update'),\r\n        voice_state_update: packEvent('voice_state_update'),\r\n        voice_server_update: packEvent('voice_server_update'),\r\n        webhooks_update: packEvent('webhooks_update')\r\n    };\r\n}\r\n\r\nfunction packEvent(eventName: string): (cb: () => Promise<any>) => any {\r\n    return function(cb: () => Promise<any>): any {\r\n        console.log(eventName)\r\n        if (Array.isArray(Global.events[eventName]))\r\n            Global.events[eventName].push(cb);\r\n        else\r\n            Global.events[eventName] = [cb];\r\n    };\r\n}\r\n\r\nasync function onOpen(ws: WebSocket, event: WebSocket.Event, token: string, intents: number, encoding: Encoding): Promise<void> {\r\n    debug('websocket opened');\r\n    await Identity(ws, token, intents, encoding);\r\n}\r\n\r\nasync function onClose(event: WebSocket.CloseEvent): Promise<void> {\r\n    debug('websocket closed');\r\n    process.exit();\r\n}\r\n\r\nasync function onError(event: WebSocket.ErrorEvent): Promise<void> {\r\n    error('websocket failed');\r\n    process.exit(1);\r\n}\r\n\r\nasync function onMessage(ws: WebSocket, event: WebSocket.MessageEvent, encoding: Encoding): Promise<void> {\r\n    let data: DiscordData;\r\n    if (encoding == 'json')\r\n        data = JSON.parse(event.data as string);\r\n    else\r\n        data = decode(event.data as Buffer);\r\n\r\n    if (data.s !== undefined)\r\n        Global.sequence = data.s;\r\n\r\n    await processData(ws, encoding, data);\r\n}\r\n\r\nfunction decode(data: Buffer): DiscordData {\r\n    return unpack(data) as DiscordData;\r\n}\r\n\r\nfunction encode(data: DiscordData): Buffer {\r\n    return pack(data as unknown) as Buffer;\r\n}\r\n\r\nasync function processData(ws: WebSocket, encoding: Encoding, data: DiscordData): Promise<void> {\r\n    switch (data.op) {\r\n        case Opcode.Dispatch:\r\n            return await Dispatch(data);\r\n        case Opcode.Heartbeat:\r\n            return await Heartbeat(ws, data, encoding);\r\n        case Opcode.Reconnect:\r\n            return await Reconnect(data);\r\n        case Opcode.InvalidSession:\r\n            return await InvalidSession(data);\r\n        case Opcode.Hello:\r\n            return await Hello(ws, data, encoding);\r\n        case Opcode.HeartbeatACK:\r\n            return await HeartbeatACK(data);\r\n    }\r\n}\r\n\r\nasync function send(ws: WebSocket, data: DiscordData, encoding: Encoding): Promise<void> {\r\n    if (encoding == 'etf')\r\n        ws.send(encode(data));\r\n    else\r\n        ws.send(JSON.stringify(data));\r\n}\r\n\r\nasync function Dispatch(data: DiscordData): Promise<void> {\r\n    // console.log(data.t?.toLowerCase())\r\n    if (data.t !== undefined && Global.events[data.t.toLowerCase()] !== undefined)\r\n        for (const cb of Global.events[data.t.toLowerCase()]) {\r\n            await cb(data.d);\r\n        }\r\n}\r\n\r\nasync function Heartbeat(ws: WebSocket, data: DiscordData, encoding: Encoding): Promise<void> {\r\n    await send(ws, { ...data, d: Global.sequence }, encoding);\r\n}\r\n\r\nasync function Identity(ws: WebSocket, token: string, intents: number, encoding: Encoding): Promise<void> {\r\n    await send(ws, {\r\n        op: 2,\r\n        d: {\r\n            token,\r\n            intents,\r\n            properties: {\r\n                $os: 'linux',\r\n                $browser: 'discall',\r\n                $device: 'discall'\r\n            }\r\n        }\r\n    }, encoding);\r\n}\r\n\r\nasync function PresenceUpdate(ws: WebSocket, data: DiscordData, encoding: Encoding): Promise<void> {\r\n\r\n}\r\n\r\nasync function VoiceStateUpdate(ws: WebSocket, data: DiscordData, encoding: Encoding): Promise<void> {\r\n\r\n}\r\n\r\nasync function Resume(ws: WebSocket, data: DiscordData, encoding: Encoding): Promise<void> {\r\n\r\n}\r\n\r\nasync function Reconnect(data: DiscordData): Promise<void> {\r\n\r\n}\r\n\r\nasync function RequestGuildMembers(ws: WebSocket, data: DiscordData, encoding: Encoding): Promise<void> {\r\n\r\n}\r\n\r\nasync function InvalidSession(data: DiscordData): Promise<void> {\r\n\r\n}\r\n\r\nasync function Hello(ws: WebSocket, data: DiscordData, encoding: Encoding): Promise<void> {\r\n    setInterval(Heartbeat, data.d.heartbeat_interval, ws, { op: 1 }, encoding);\r\n}\r\n\r\nasync function HeartbeatACK(data: DiscordData): Promise<void> {\r\n    debug('heartbeat ACK received');\r\n}"],
  "mappings": "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",
  "names": []
}
